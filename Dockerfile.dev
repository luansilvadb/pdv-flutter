# =============================================================================
# üê≥ PDV Restaurant - Dockerfile para Desenvolvimento
# =============================================================================
# Autor: PDV Restaurant Team
# Descri√ß√£o: Ambiente de desenvolvimento com hot reload
# Uso: docker build -f Dockerfile.dev -t pdv-dev .
# =============================================================================

FROM debian:bookworm-slim

# Metadados da imagem
LABEL maintainer="PDV Restaurant Team"
LABEL description="Flutter Web development environment with hot reload"
LABEL version="2.0.0-dev"

# Definir vari√°veis de ambiente para Flutter
ARG FLUTTER_VERSION=3.32.3
ENV FLUTTER_VERSION=$FLUTTER_VERSION
ENV FLUTTER_HOME=/opt/flutter
ENV PATH="$FLUTTER_HOME/bin:$PATH"
ENV PUB_CACHE=/opt/flutter/.pub-cache
ENV FLUTTER_ROOT=$FLUTTER_HOME

# Argumentos de build configur√°veis
ARG BUILD_MODE=debug
ENV BUILD_MODE=$BUILD_MODE
ENV FLUTTER_WEB_PORT=3000
ENV FLUTTER_WEB_HOSTNAME=0.0.0.0

# Instalar depend√™ncias do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    unzip \
    xz-utils \
    ca-certificates \
    fonts-liberation \
    libglu1-mesa \
    wget \
    procps \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Download e instala√ß√£o do Flutter
RUN curl -fsSL https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz \
    | tar -xJ -C /opt/ \
    && flutter config --no-analytics \
    && flutter config --enable-web \
    && flutter precache --web \
    && flutter doctor -v

# Criar usu√°rio n√£o-root para desenvolvimento
RUN groupadd -r flutterdev && useradd -r -g flutterdev flutterdev \
    && mkdir -p /app \
    && chown -R flutterdev:flutterdev /app \
    && chown -R flutterdev:flutterdev /opt/flutter

# Configurar diret√≥rio de trabalho
WORKDIR /app

# Mudar para usu√°rio n√£o-root
USER flutterdev

# Copiar arquivos de configura√ß√£o
COPY --chown=flutterdev:flutterdev pubspec.yaml ./
# pubspec.lock ser√° gerado automaticamente pelo flutter pub get

# Instalar depend√™ncias Flutter
RUN flutter pub get

# Copiar c√≥digo fonte
COPY --chown=flutterdev:flutterdev . .

# Expor porta para desenvolvimento
EXPOSE 3000

# Health check para desenvolvimento
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Script de entrada para desenvolvimento com hot reload
COPY --chown=flutterdev:flutterdev <<'EOF' /app/dev-entrypoint.sh
#!/bin/bash
set -e

echo "üöÄ Iniciando PDV Restaurant em modo desenvolvimento..."
echo "üì± Flutter version: $(flutter --version | head -n1)"
echo "üåê Ser√° servido em: http://$FLUTTER_WEB_HOSTNAME:$FLUTTER_WEB_PORT"
echo "üî• Hot reload: Ativado"

# Verificar se h√° mudan√ßas nos arquivos de depend√™ncia
if [[ pubspec.yaml -nt .packages ]] || [[ pubspec.lock -nt .packages ]]; then
    echo "üì¶ Atualizando depend√™ncias..."
    flutter pub get
fi

# Iniciar servidor de desenvolvimento com hot reload
exec flutter run \
    -d web-server \
    --web-port=$FLUTTER_WEB_PORT \
    --web-hostname=$FLUTTER_WEB_HOSTNAME \
    --$BUILD_MODE \
    --hot \
    --web-renderer=html \
    --dart-define=FLUTTER_WEB_USE_SKIA=false \
    --dart-define=FLUTTER_WEB_AUTO_DETECT=true \
    --verbose
EOF

RUN chmod +x /app/dev-entrypoint.sh

# Comando padr√£o
CMD ["/app/dev-entrypoint.sh"]