// Mocks generated by Mockito 5.4.5 from annotations
// in pdv_restaurant/test/features/cart/cart_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pdv_restaurant/core/errors/failures.dart' as _i5;
import 'package:pdv_restaurant/features/cart/domain/entities/cart_entity.dart'
    as _i6;
import 'package:pdv_restaurant/features/cart/domain/repositories/cart_repository.dart'
    as _i3;
import 'package:pdv_restaurant/features/products/domain/entities/product_entity.dart'
    as _i8;
import 'package:pdv_restaurant/features/products/domain/repositories/product_repository.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> getCart() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #getCart,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> addItem({
    required String? productId,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [],
          {
            #productId: productId,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #addItem,
            [],
            {
              #productId: productId,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> removeItem(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeItem,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #removeItem,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> updateQuantity({
    required String? productId,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuantity,
          [],
          {
            #productId: productId,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #updateQuantity,
            [],
            {
              #productId: productId,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> incrementQuantity(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementQuantity,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #incrementQuantity,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> decrementQuantity(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrementQuantity,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #decrementQuantity,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> clearCart() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #clearCart,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> saveCart(
          _i6.CartEntity? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCart,
          [cart],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #saveCart,
            [cart],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> containsProduct(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsProduct,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #containsProduct,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getProductQuantity(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductQuantity,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getProductQuantity,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i7.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>
      getAllProducts() => (super.noSuchMethod(
            Invocation.method(
              #getAllProducts,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProductEntity>>(
              this,
              Invocation.method(
                #getAllProducts,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>
      getProductsByCategory(String? categoryId) => (super.noSuchMethod(
            Invocation.method(
              #getProductsByCategory,
              [categoryId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProductEntity>>(
              this,
              Invocation.method(
                #getProductsByCategory,
                [categoryId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.ProductEntity>> getProductById(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [productId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i8.ProductEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ProductEntity>(
          this,
          Invocation.method(
            #getProductById,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ProductEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>> getProductsByIds(
          List<String>? productIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByIds,
          [productIds],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProductEntity>>(
          this,
          Invocation.method(
            #getProductsByIds,
            [productIds],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProductEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> isProductAvailable(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isProductAvailable,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #isProductAvailable,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
